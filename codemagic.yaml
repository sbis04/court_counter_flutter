workflows:
  default-workflow:
    name: Default Workflow
    environment:
      vars:
        CM_KEYSTORE: Encrypted(Z0FBQUFBQmQ1aDB5V3lQdFg0djZDalZ2N2JmWXZqNDVoUEhPYlc5eTNLNG43N1RhVXE4Yy1zRU10VHhGdXlIdHdIeWdWQmpqR1hGXzF0UWVwZjhzeXhmc2R6T2J2azA1SjdMX0xXRWRuQ2VNX242QVZNUUFpYlZfU19CM1ZwUTdBOXZ3aFp4d1ZOQ1dXNmNsemllRDFqQ0FFeXZQVDNVWW0wMm9INDZoTmdKOS1DQk9EOE8wZW1TZmRKUy01Skx0MlloLU0wdW0xMVpwTEx6eDhvTUtvdFItS3c0ZHlfYTczcHRfX01jUkZZYlEyZHpFQ3N5M29NSGZXczAzZ2ZsZ0NHdG42VE9jNGRTZVNyWlAyemctY2NOY2l3N1RidEJfM1pEeXlkNmFMSHB6bm9vd1R4VVl5M0RCX3pvZE9uY0c4OTVfdlBMNDlYR1RqLW9yT3dpeHg0OW4wd3JOX1MxTF8yT2NsOXdKVE5zU281Q295eUdwdjN6d2psVmxYc2tYYlZlWTdObk9LQkZUaENVdWhnb1BFeU1NUTFicFpHWkljSFdQMmMzSnNFWlJDbnpFWmwwVzFqdlB2SFoyYnJTMTBlelVpWkZWU2J0XzY0TGV0ZGVrRjktaXVnNGltVi12MFZHQzBubjhBNWtZZEtzMUxxR28tTXNLSGRzQVdDXzM1NHUxOFQ3aXF3WnBCaXJISU1IOU9FWGM0b1ZGQkx3Tm9DREdRbmFHdWMzVWJQVm5LZzB4aGtKWGltTVlYdWRwUExBNmIweWtKVENnY3JhZzdqd2xkb1RvR19qWjFXZ2szczFHYXEwVVdOTmU5YWZmUUt1SDRnX1lUZkw3N1hDcEJnSDFBWGhKVTB1VnctczhRaThzOW42d3RVZ3Rnd3g1UHV4bnlQM0QyX0cwbFltemtneXh1aTRnY3NwV1VJV09RTVphaXJNbDJfNlM0ZVdBWmRXT09CS0ZxWHZsNTdPT081SUVZRkRRRW44SXg2ZncyVVVVT09XcDFKajJHVkRjSnUzWGJPaUZjTGZvbjZ1cmtwZk83ZlBHTHp5VVk0SzR2UzZ0Vl8yU09qWmV4bE5YcXh5QlZqaTJmeFRtcXFBYlpSOXhNYnYyN2NRSUZ0akxkb09XUUZDVGJCLWNDZTNHZUM2S1BHaXlUMkJ2MlYyeXdBTnNZekdyMGZlUTlQVHU3SnR6aXU0R2p6ZnRiNWphRDNqaDRQQ053WEF4cFBNTE5yN3FPUVVuTnJTWWxYU1FnMVFzQk1IaGpVSXFpX2RQV0VnRDc0eFFMRlppTVMxTjNNSGoyZ2k4dmRwWXg3a3hyRFVsRGt3V3dBSEhUOHd6c2VpZFg5Wi1acWxjWS0yRGtxb2RlWmdBWEpnTUNTXzZUNXNEa0RrU0JWVDhiUTFjanVaekFjZjhJTmF0NnhZMDd4VzFmQmFXNFk1S3NrMTBNUHMyemNSM1lYRmRVeU5xWkpFbk9pNFp1OWpIWC1COVdfUUhMQnhobVZQRVNhSXcyLVZtMG5ZNkp0anpIMlFvQU9QMXR4ckRLODVLc0xGaVh5bm12QmU0TGFFVzViR1JEQ1p3c2tLQWZHb2V5Q2loM1JZaEJRY2RhZVVCbFR4bkRJVC03cUZTdTlJTkVsMUdZSnFpTGQxSGlkQzBBREZjc1RpXy1JaW5IRkxwZFE5ZDdjSzU3ajBsQy01bG9qZFc1dDdQNERoR1RkWXJCS2JmS2pKaEkwc2VBQnlXSnRFRGJ0MWtXdVg0N1BtMmNIcFI2ODhPdnRtcDlSSndiQkZtOF9oSXUxNnJicVo5bGpqV2RxalBOR19PRW9UbmlQQkdsVHRXVFVFbWlnNmFzVlZBcG1kOFcxOXFoLUVFc2ZON1FHYUFqLVcxY29QcXBJR2wwMllPakVKWUtnV0JHeUo4MktjN3lyeDgxVHVraDhuUWhCSzItWTNDbGRlZ2g0c0ZzSktvNXpfak5maTN4SmxucU9raXlGdVlmYXFoTlVwT3g3YkF3VWxZVnlBdUdRcDVUY1JNdGhNMzNNS1RmQnlxMTNwenZDdFpmT2pUU3hFOVl1ZXJOMUN0QWNPZmQ4OHdsaGlmczZSNE5KRWJkcHJZTzBpaUkxd0wxWDBYcFVNZm1qMjJCdUJFQnJRT1k1WnVtUlduSUNKWmg3eTY1blJoNUx1OUZfZ3V2OUo5RmxEX3M2TE1zby1FZHpROXB2QVdPbGwzUklzbXF1VnNPd2JkY2t5ZXhhX3JJOEdpRGNJUHBnT0FYX3RPdU8wR1RVNTNkTGVvQzlIZTdjVjhwdmNULXZiMktmYVMzTDd4WHVtb3duNi0yUGhqRmRndVhncWtUMVdxX0szbmJyM3BxTTU2WEM4WGlKbFVNT0kyQy1RNWFsam1BMHV5cTFoX3hyUjVqMmZhTnhzd25RNTNVVF95aURJdlA3N0d4Vm1XMzAwVWtBclZEY2Rpdjc5N2xtdVpqU1lPRzBtOUVyU3FXa05RMlNwbWttVThDeXBCbWZ4ZG5FUHdpSlBBd3dOdXVjYUxmTVVRUndxaGtkekQ5UTdGbk5aazV5bTg4SDg0RVhmLTF1aGJSM0IxTTdvdTNlV0FKRERXV0w1VWRfaVFiTWppZWRRcmYwWkZITjBpcS15NENOMnAzWklnVWpjYlJOWl9Lek5SaFYzRGFNdUxZSG4wUHdHZmFIQ0VoNDVmbVg2SHNrM2NfbDl1bjRMd0UzazZWZ2xJWEVzMlI0R1k5eWN0akRYNXJfa2l4em9lME10YXFiS3BmQVcwWFItb09zdGZoZ0JqTGQtNHQ4X2JqQVl6d2MzS0stN1pURDBWakhIaEJXOW96amVCM0FNYzM1bzJielV1dVlPWmFRT0M3R0FMMXJGLTEzZ25NNUZPN1RNVXpTOVNMbnlFYkNScG1OaFlBelYwZ3VTNUpLZGtoNGZ1SlJtQ0tNd2JUbmtoeGZ0VzVmWEJKcVpVQXZxaFE1SjRfSEtzeXJIN0xuT05hdGtSZVZ4bEJzLWhhOU9BLWJwR0NhYlFCM3BHMXA3UUFqSkZBSXpzbHR1LVNiWGhVSTdTUExvbXJWUGFQWFBtQnVTTU10S1pDU29iWTdqeUFTVm9MYVZCN3dRaEZ4SmJ6ZE5vYzlhZTdKRDc4Y3RBdV9STFBjekJSdjF5eVZ1eUhWcmNsUEJJM294WWtkMDlINjI4Z1ZralBoem5iNm5fYkhqd2xia0NKdjVlN3d5U09mdmxsWmZiX2tVYldUMXAwVXVvaTMtUGkzME12WEhrTHZUUWpJaFpBWFBHdEw3QUcyai13Z2ZWWDRSSXh3WWJZZjZMX3BjLVh4WDU5azlkcTZTWF92UTFrN283OE1za2pHRUFmamlTbUowYzZYSDRRQllYb0NVMnFndFhDZEJiemhZbC1vdjd5SXVScjdQYVQ1aG5FMzFPcVpiTjNQRFh2N0FmR1Y2QkQ1LVZCR0FHeUxDTmdsQ1piZW10R1VpN29SaDlMTW1qRkNWYjBQWERyTnB3N1lhTEVhZXVDRHktc3VHTUFiMl9jM21UN0lQRmlnZUNaM2hyWXVQVnZQaVJhalJoaG40bGptTmgzVHo4MWFLbWIyLTlPYVA4ZVhsMDUtUW9hX21VTWg4cHJILWhFZk5TMUtUeXZNbDBQNFNRVEdPNnNIU2dSeV9HZlpiaXdvYVlpY2RYQXViQUFMTFFKY24zaDBPaklnUlRjb2JORjZIRllzMHFyMnJyMVM0aXQ4SFEtdmlrU25ibUpwcXpZMG1XS3lQUWM1UXpwV3hFMXFwR0NxbllJNXpxV0UzZ1FkVVZlUHhrYnBkSnFFQkNScmdlcW11ZjBfSTY4RjZPWHdwOUxvU2YwODI1Y19QR1FPX1VFMm1JWFpwNkVBUmI5UEZJZGs2TjFTbGp2dEJnSGRUMFppcGp5OWxQV1lRMTN5a1NiX296eWhMVTMxVk1MeXNSRjA5bjFxNmFyZl9qX1hjOFZzRWVBWDN5aG9FWWVFXzh5czBidXNBcUROcnJ1OGlnU0J0X1BJNkpNcnRXZkNjSGJPeGVPbmlsLUY2RURfNm1iSS1tX1Y5YktuS1BQbEJoMVFIMXFIbnpMaTFVWWpEd3ZRYlhXSnR3bGxXVDNsUXk0T0V2NDVpbmQtMWlqLVZMVFpDdGRvYktwTjVPbzNoa0Vrbkd4ZUI5RkRCUnR0aDFsTlZYMjQwdDBuTG51Q1BFODBZZHY5cFd4OFBzV1l4QnM0YUN2VWRrQ2lXUk5XNll5UVVCcXlWZUZETy1oeUxvVEJfcU53eGNvVTRXWnVYaEpiRVRSMHU5V0ZIOEFDWGY3Ni1kTlFYV240cnFXWjk4TXFpVGw4aG0xX2ZRd0haNkh0N3IwSGZoZjFreklxdkFCMHQ1ZmpjSU1Fa2hTOTVVZUdsQnQ2azFhYi0xdnZnWWhqbmh2d2hCSFJFMFZIMnlubktMbDIzdk9LX1puZUpMa3h1cW5OWXZ2NlREUzlNczh4a2NXeGVNRUN1WTNqRFV2OHl0alIySnBmUXd1RXNOaHV3QmlfeDlaU1ZMenRQOTJZOEhXaE5Fd2I4N2VhSEtLTWZkTkJKMVNpYWpXOVg0UFM1WmpPWUE1al9MS0QzYzBibWFfQzNSVWlIU2NtQWhaN2Rvb3I0MjJyaTdmZmd1YW5fVFFCNzZxTkJuMWhzOVJkWFBrQVJFem5ZN2xmWXdfVlVZMFVyZzZlQkdqU05DMlliNDU3NzdwcEwySlRtc1Eya2ZjdXJMVkJEclBNd09qb0NEaGFuRGZfUzJ4NUw3ZEZNN1c4ekc3aUFUSUdfR0tXNEZZZVF6d1JVZFB1R0RuZllLbU1XT0FCeExteVJxZ0Q4RnE1cDRIMFZZLURqVS11ZTFhX0F1MlE3M3prTlVUclhiTkpDN0ZYcTU4SkRpSlZYckZmOENxM3BrMGJCNWtTcDBnQllvLVludTFESjRMR29wTGlzNjlPSFdPNUgyZGZWVkxybjAyc2xEWmYxS0E4SUJKcUNPajBrcnlQQlhLNS1RQkRTa0NkNlFPVzdKaWpkSFc3MGlwZklLYk1NLXRucDRPSHdkZkJZTjVwVXNXUGoxYTB2STMwZDgxMEJVcEVpNUNNRTE4Q0M5MXJmRnJ3c1AtbTlPQmdxQzlxWXl1VlRyMFI3UGtmV056dXJ4UTltLWwtM2JfRlNmYUtaNWk5ajdTajJ4N1RCdTU1V3RjRzJxT2czSEdKWkhyTE1JQkdsWExYVzBtb3VTRk92a0FxUHE3bjI2bl9iM0c1N08xYklTTHo4bF9QZ2pKd21Pc1M1WTh6YWVNdjdIMHVIT1o0QmFGd2twLUtjRW5DWjY1VXRGOGVkTDJNQi1VOU5xZjhBclRoWnE4MW16OTAyU0RTLWlPMVRKazJKRDRTRi00RTNIMGwtRnhUVzEtX0FIeW9QZEMyVmt6Zjg0Sl9Vb0lxZHVveFpSZ2Z0ckR6cWsyR2RMMU5tNE94SGRLOXRFTE1fYkdOcExoUDh0ZmJBeWJ0dkJZc1doWmZhVlNIWE5UTzdkeURyYjE1Um9ocFRQekZhOHRlMV9KMUZqLWpUd1FmcVpPb1FUWERDN3poa2tOYk5XWEFSWEVyOGVhV01XOXh6T0I2SVhLNlVTbXgtam1nZDJJallBRnpyeHhHS1VtcTZ2M2VaOE4tREw5TmUxdEp5aFF4bDRZWV9MeWFNWm85dU5LV2FQcHB0cWxRR2UyZHpES2hELWVraHd0aElGTDc0cDdBeVQ4MXF3Wk1PaFNQbGJiRlpibWt2MDA5U1FnNnZLclpfQlZ1Z2FVbTZCcE1kdHJWbmVPS0JpYUFlVWdpMWo1NTJmeURUZVMxbGNXaXlzZk14TzYwaThESjhXWEsyOXdObExNOGt5VDBFRnNhM0xSUkpDbzhlZF82SjNuV1JoejNfN0dhSS02Z01Qb29tU3BQZGhtZTFwek1zNnF2cHpBMGtFRVd1OEFLN0JEMFRPY2owUGIwRVlubkU5TUhSbUFsSGxoODBrdlpVM25UbTNNU0pxYTdCQUVlb2RNZjZTaWFzMW9PQmJmcVBWMEJ3TGhlY3RCZmV4SHI1VzQ2eEdpM2tzalJBS3NTaGlLelVxQUp1bEpweUpTbFdWb3FTSHRqWlVjTjFuLUJOeEpnZFJ5NnZJakw2Z2kxaUQ1UkgzY2JRWHNqZ1JzdXJfNGZTN2pWdlhoSFVvNzR3ZkpoUlJPNktkSEcyaQ==)
        CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmQ1aDB5U3RZaGwtbEFlNHJFLXdTQm5ENDdwdTNYRzVKU3M3TGJqRk9EOXpqNFUtWHpSU090VjR4SkdxcXdrT2pVaEhYM0ZpQ2JkQjREWFpYSVFOT2k4OWhZVnc9PQ==)
        CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmQ1aDB5VllEdTFMS0pJYUZMLXV5aDVCQVdLajV0UDJFalpBdWdGLXFwNHVkQnZNSDZyTmpwX21CbURKQ3lnWnJhRktQQ19XVDRna3FxVndVcUlhX1pjTXJjVkE9PQ==)
        CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmQ1aDB5cWFiaGEwdjN2SmFTVUpfOE81SXl3ZHlxMENsbm12dVhoR3BLc3ZRX1hMVHB4cEU3X1ZHN3k2Xy1HSkxoX3JzOVE3ZTIyYXNNSFpINzZWbXlpWkdDRFE9PQ==)
      flutter: stable
    scripts:
      - |
        # set up debug key.properties
        # rm -f ~/.android/debug.keystore
        # keytool -genkeypair \
        #   -alias androiddebugkey \
        #   -keypass android \
        #   -keystore ~/.android/debug.keystore \
        #   -storepass android \
        #   -dname 'CN=Android Debug,O=Android,C=US' \
        #   -keyalg 'RSA' \
        #   -keysize 2048 \
        #   -validity 10000
        # set up key.properties
        echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
        cat >> "$FCI_BUILD_DIR/CourtCounter/key.properties" <<EOF
        storePassword=$CM_KEYSTORE_PASSWORD
        keyPassword=$CM_KEY_ALIAS_PASSWORD
        keyAlias=$CM_KEY_ALIAS_USERNAME
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/counter_flutter/.android/local.properties"
      - cd $FCI_BUILD_DIR/counter_flutter && flutter packages pub get
      - cd $FCI_BUILD_DIR/counter_flutter && flutter test
      - cd $FCI_BUILD_DIR/CourtCounter && ./gradlew assembleRelease
    publishing:
      email:
        recipients:
          - sbis1999@gmail.com
    artifacts:
      - CourtCounter/app/build/**/outputs/**/*.apk
      - flutter_drive.log
